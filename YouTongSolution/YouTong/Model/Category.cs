//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace YouTong.Model
{
	using System;
	using MySoft.Data;


	/// <summary>
	/// 表名：ut_Category 主键列：ID
	/// </summary>
	[SerializableAttribute()]
	public partial class Category : Entity
	{

		protected Guid _ID;

		protected DateTime _AddTime;

		protected DateTime _UpdateTime;

		protected Boolean _IsDeleted;

		protected String _Name;

		protected String _Entity;

		protected Guid _UserID;

		protected Int32 _Count;

		public Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				this.OnPropertyValueChange(_.ID, _ID, value);
				this._ID = value;
			}
		}

		public DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				this.OnPropertyValueChange(_.AddTime, _AddTime, value);
				this._AddTime = value;
			}
		}

		public DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				this.OnPropertyValueChange(_.UpdateTime, _UpdateTime, value);
				this._UpdateTime = value;
			}
		}

		public Boolean IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
				this._IsDeleted = value;
			}
		}

		public String Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				this.OnPropertyValueChange(_.Name, _Name, value);
				this._Name = value;
			}
		}

		public String Entity
		{
			get
			{
				return this._Entity;
			}
			set
			{
				this.OnPropertyValueChange(_.Entity, _Entity, value);
				this._Entity = value;
			}
		}

		public Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				this.OnPropertyValueChange(_.UserID, _UserID, value);
				this._UserID = value;
			}
		}

		public Int32 Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				this.OnPropertyValueChange(_.Count, _Count, value);
				this._Count = value;
			}
		}

		/// <summary>
		/// 获取实体对应的表名
		/// </summary>
		protected override Table GetTable()
		{
			return new Table<Category>("ut_Category");
		}

		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		protected override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
                        _.ID};
		}

		/// <summary>
		/// 获取列信息
		/// </summary>
		protected override Field[] GetFields()
		{
			return new Field[] {
                        _.ID,
                        _.AddTime,
                        _.UpdateTime,
                        _.IsDeleted,
                        _.Name,
                        _.Entity,
                        _.UserID,
                        _.Count};
		}

		/// <summary>
		/// 获取列数据
		/// </summary>
		protected override object[] GetValues()
		{
			return new object[] {
                        this._ID,
                        this._AddTime,
                        this._UpdateTime,
                        this._IsDeleted,
                        this._Name,
                        this._Entity,
                        this._UserID,
                        this._Count};
		}

		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		protected override void SetValues(IRowReader reader)
		{
			if ((false == reader.IsDBNull(_.ID)))
			{
				this._ID = reader.GetGuid(_.ID);
			}
			if ((false == reader.IsDBNull(_.AddTime)))
			{
				this._AddTime = reader.GetDateTime(_.AddTime);
			}
			if ((false == reader.IsDBNull(_.UpdateTime)))
			{
				this._UpdateTime = reader.GetDateTime(_.UpdateTime);
			}
			if ((false == reader.IsDBNull(_.IsDeleted)))
			{
				this._IsDeleted = reader.GetBoolean(_.IsDeleted);
			}
			if ((false == reader.IsDBNull(_.Name)))
			{
				this._Name = reader.GetString(_.Name);
			}
			if ((false == reader.IsDBNull(_.Entity)))
			{
				this._Entity = reader.GetString(_.Entity);
			}
			if ((false == reader.IsDBNull(_.UserID)))
			{
				this._UserID = reader.GetGuid(_.UserID);
			}
			if ((false == reader.IsDBNull(_.Count)))
			{
				this._Count = reader.GetInt32(_.Count);
			}
		}

		public override int GetHashCode()
		{
			return base.GetHashCode();
		}

		public override bool Equals(object obj)
		{
			if ((obj == null))
			{
				return false;
			}
			if ((false == typeof(Category).IsAssignableFrom(obj.GetType())))
			{
				return false;
			}
			if ((((object)(this)) == ((object)(obj))))
			{
				return true;
			}
			return false;
		}

		public class _
		{

			/// <summary>
			/// 表示选择所有列，与*等同
			/// </summary>
			public static AllField All = new AllField<Category>();

			/// <summary>
			/// 字段名：ID - 数据类型：Guid
			/// </summary>
			public static Field ID = new Field<Category>("ID");

			/// <summary>
			/// 字段名：AddTime - 数据类型：DateTime
			/// </summary>
			public static Field AddTime = new Field<Category>("AddTime");

			/// <summary>
			/// 字段名：UpdateTime - 数据类型：DateTime
			/// </summary>
			public static Field UpdateTime = new Field<Category>("UpdateTime");

			/// <summary>
			/// 字段名：IsDeleted - 数据类型：Boolean
			/// </summary>
			public static Field IsDeleted = new Field<Category>("IsDeleted");

			/// <summary>
			/// 字段名：Name - 数据类型：String
			/// </summary>
			public static Field Name = new Field<Category>("Name");

			/// <summary>
			/// 字段名：Entity - 数据类型：String
			/// </summary>
			public static Field Entity = new Field<Category>("Entity");

			/// <summary>
			/// 字段名：UserID - 数据类型：Guid
			/// </summary>
			public static Field UserID = new Field<Category>("UserID");

			/// <summary>
			/// 字段名：Count - 数据类型：Int32
			/// </summary>
			public static Field Count = new Field<Category>("Count");
		}
	}
}
