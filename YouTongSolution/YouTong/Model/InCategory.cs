//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace YouTong.Model
{
	using System;
	using MySoft.Data;


	/// <summary>
	/// 表名：ut_InCategory 主键列：ID
	/// </summary>
	[SerializableAttribute()]
	public partial class InCategory : Entity
	{

		protected Guid _ID;

		protected DateTime _AddTime;

		protected DateTime _UpdateTime;

		protected Boolean _IsDeleted;

		protected Guid _EntityID;

		protected Guid _CategoryID;

		public Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				this.OnPropertyValueChange(_.ID, _ID, value);
				this._ID = value;
			}
		}

		public DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				this.OnPropertyValueChange(_.AddTime, _AddTime, value);
				this._AddTime = value;
			}
		}

		public DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				this.OnPropertyValueChange(_.UpdateTime, _UpdateTime, value);
				this._UpdateTime = value;
			}
		}

		public Boolean IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
				this._IsDeleted = value;
			}
		}

		public Guid EntityID
		{
			get
			{
				return this._EntityID;
			}
			set
			{
				this.OnPropertyValueChange(_.EntityID, _EntityID, value);
				this._EntityID = value;
			}
		}

		public Guid CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				this.OnPropertyValueChange(_.CategoryID, _CategoryID, value);
				this._CategoryID = value;
			}
		}

		/// <summary>
		/// 获取实体对应的表名
		/// </summary>
		protected override Table GetTable()
		{
			return new Table<InCategory>("ut_InCategory");
		}

		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		protected override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
                        _.ID};
		}

		/// <summary>
		/// 获取列信息
		/// </summary>
		protected override Field[] GetFields()
		{
			return new Field[] {
                        _.ID,
                        _.AddTime,
                        _.UpdateTime,
                        _.IsDeleted,
                        _.EntityID,
                        _.CategoryID};
		}

		/// <summary>
		/// 获取列数据
		/// </summary>
		protected override object[] GetValues()
		{
			return new object[] {
                        this._ID,
                        this._AddTime,
                        this._UpdateTime,
                        this._IsDeleted,
                        this._EntityID,
                        this._CategoryID};
		}

		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		protected override void SetValues(IRowReader reader)
		{
			if ((false == reader.IsDBNull(_.ID)))
			{
				this._ID = reader.GetGuid(_.ID);
			}
			if ((false == reader.IsDBNull(_.AddTime)))
			{
				this._AddTime = reader.GetDateTime(_.AddTime);
			}
			if ((false == reader.IsDBNull(_.UpdateTime)))
			{
				this._UpdateTime = reader.GetDateTime(_.UpdateTime);
			}
			if ((false == reader.IsDBNull(_.IsDeleted)))
			{
				this._IsDeleted = reader.GetBoolean(_.IsDeleted);
			}
			if ((false == reader.IsDBNull(_.EntityID)))
			{
				this._EntityID = reader.GetGuid(_.EntityID);
			}
			if ((false == reader.IsDBNull(_.CategoryID)))
			{
				this._CategoryID = reader.GetGuid(_.CategoryID);
			}
		}

		public override int GetHashCode()
		{
			return base.GetHashCode();
		}

		public override bool Equals(object obj)
		{
			if ((obj == null))
			{
				return false;
			}
			if ((false == typeof(InCategory).IsAssignableFrom(obj.GetType())))
			{
				return false;
			}
			if ((((object)(this)) == ((object)(obj))))
			{
				return true;
			}
			return false;
		}

		public class _
		{

			/// <summary>
			/// 表示选择所有列，与*等同
			/// </summary>
			public static AllField All = new AllField<InCategory>();

			/// <summary>
			/// 字段名：ID - 数据类型：Guid
			/// </summary>
			public static Field ID = new Field<InCategory>("ID");

			/// <summary>
			/// 字段名：AddTime - 数据类型：DateTime
			/// </summary>
			public static Field AddTime = new Field<InCategory>("AddTime");

			/// <summary>
			/// 字段名：UpdateTime - 数据类型：DateTime
			/// </summary>
			public static Field UpdateTime = new Field<InCategory>("UpdateTime");

			/// <summary>
			/// 字段名：IsDeleted - 数据类型：Boolean
			/// </summary>
			public static Field IsDeleted = new Field<InCategory>("IsDeleted");

			/// <summary>
			/// 字段名：EntityID - 数据类型：Guid
			/// </summary>
			public static Field EntityID = new Field<InCategory>("EntityID");

			/// <summary>
			/// 字段名：CategoryID - 数据类型：Guid
			/// </summary>
			public static Field CategoryID = new Field<InCategory>("CategoryID");
		}
	}
}
