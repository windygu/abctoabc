<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title></title>
</head>
<body>

    <span class="Apple-style-span" 
        style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Simsun; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: medium; ">
    <span class="Apple-style-span" 
        style="font-family: verdana, sans-serif; font-size: 13px; letter-spacing: 1px; line-height: 24px; text-align: justify; ">
    <h2 style="margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-family: arial, sans-serif; font-size: 17px; font-weight: bold; line-height: 34px; background-image: url(http://gmarwaha.com/image/greyDot.gif); background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; position: relative; background-position: 0% 100%; background-repeat: repeat no-repeat;">
        Documentation</h2>
    <p style="margin-top: 0px; margin-right: 0px; margin-bottom: 20px; margin-left: 10px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-size: 12px; ">
        A basic carousel can be constructed with just the following snippet of code. 
        This code is typically executed on document.ready or window.load event, but you 
        can fire the call whenever it is appropriate for your use-case. The following 
        example fires it on document.ready event.</p>
    <pre style="margin-top: 10px; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; padding-top: 10px; padding-right: 10px; padding-bottom: 10px; padding-left: 20px; background-color: rgb(0, 0, 0); color: rgb(255, 255, 255); font-size: 12px; border-top-left-radius: 5px 5px; border-top-right-radius: 5px 5px; border-bottom-right-radius: 5px 5px; border-bottom-left-radius: 5px 5px; ">$(function() {
    $(&quot;.anyClass&quot;).jCarouselLite({
        btnNext: &quot;.next&quot;,
        btnPrev: &quot;.prev&quot;
    });
});
    </pre>
    <p style="margin-top: 0px; margin-right: 0px; margin-bottom: 20px; margin-left: 10px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-size: 12px; ">
        All the possible customizations are discussed in the section that follows</p>
    <h2 style="margin-top: 0px; margin-right: 0px; margin-bottom: 5px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-family: arial, sans-serif; font-size: 17px; font-weight: bold; line-height: 34px; background-image: url(http://gmarwaha.com/image/greyDot.gif); background-attachment: initial; background-origin: initial; background-clip: initial; background-color: transparent; position: relative; background-position: 0% 100%; background-repeat: repeat no-repeat;">
        Options</h2>
    <dl style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; ">
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            btnPrev</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Selector for the &quot;Previous&quot; button. The navigation buttons - both prev and next 
            - need not be as part of the carousel &quot;div&quot; itself, but it can be if you want it 
            to. Where ever you decide to place those buttons in the HTML structure, an 
            appropriate jQuery selector for the &quot;previous&quot; button should be provided as the 
            value for this option.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            btnNext</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Selector for the &quot;Next&quot; button. The navigation buttons - both prev and next - 
            need not be as part of the carousel &quot;div&quot; itself, but it can be if you want it 
            to. Where ever you decide to place those buttons in the HTML structure, an 
            appropriate jQuery selector for the &quot;next&quot; button should be provided as the 
            value for this option.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            btnGo</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            If you don&#39;t want next and previous buttons for navigation, instead you prefer 
            custom navigation based on the item number within the carousel, you can use this 
            option. Just supply an array of selectors for each element in the carousel. The 
            index of the array represents the index of the element. What i mean is, if the 
            first element in the array is &quot;.0&quot;, it means that when the element represented 
            by &quot;.0&quot; is clicked, the carousel will slide to the first element and so on and 
            so forth. This feature is very powerful. For example, i made a tabbed interface 
            out of it by making my navigation elements styled like tabs in css. As the 
            carousel is capable of holding any content, not just images, you can have a very 
            simple tabbed navigation in minutes without using any other plugin. The best 
            part is that, the tab will &quot;slide&quot; based on the provided effect. :-)</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            mouseWheel</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            As of version 0.4.0, the navigation buttons are no more needed to enjoy the 
            carousel. The mouse-wheel itself can be used for navigation. To achieve this, 2 
            things should be done. First, include the mousewheel plugin (checkout the 
            installation section). Second, set &quot;true&quot; for this option. That&#39;s it, now you 
            will be able to navigate your carousel using the mouse wheel. Using buttons and 
            mouse-wheel are not mutually exclusive. You can still have buttons for 
            navigation as well. They complement each other. To use both together, just 
            supply the btnNext/btnPrev or btnGo options.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            auto</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            As of version 0.4.0, the carousel can auto-scroll as well. This is enabled by 
            specifying a millisecond value to this option. The value you specify is the 
            amount of time between 2 consecutive slides. The default is null, and that 
            disables auto-scrolling. Specify this value and watch your carousel magically 
            scroll.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            speed</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Specifying a speed will slow-down or speed-up the sliding speed of your 
            carousel. Try it out with different speeds like 800, 600, 1500 etc. Providing 0, 
            will remove the slide effect.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            easing</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            You can specify any easing effect. Note: You need easing plugin for that. Once 
            specified, the carousel will slide based on the provided easing effect.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            vertical</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Determines the direction of the carousel. true, means the carousel will display 
            vertically. The next and prev buttons will slide the items vertically as well. 
            The default is false, which means that the carousel will display horizontally. 
            The next and prev items will slide the items from left-right in this case.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            circular</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Setting it to true enables circular navigation. This means, if you click &quot;next&quot; 
            after you reach the last element, you will automatically slide to the first 
            element and vice versa. If you set circular to false, then if you click on the 
            &quot;next&quot; button after you reach the last element, you will stay in the last 
            element itself and similarly for &quot;previous&quot; button and first element.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            visible</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            This specifies the number of items visible at all times within the carousel. The 
            default is 3. You are even free to experiment with real numbers. Eg: &quot;3.5&quot; will 
            have 3 items fully visible and the last item half visible. This gives you the 
            effect of showing the user that there are more images to the right.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            start</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            You can specify from which item the carousel should start. Remember, the first 
            item in the carousel has a start of 0, and so on.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            scroll</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            As of version 0.4.0, you can specify the number of items to scroll when you 
            click the next or prev buttons. Ofcourse, this applies to the mouse-wheel and 
            auto-scroll as well. For example, scroll:2 will scroll 2 items at a time.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            beforeStart</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Callback function that should be invoked before the animation starts. The 
            elements representing the items that are visible before the animation is passed 
            in as argument.</dd>
        <dt style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 10px; padding-top: 5px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-weight: bold; ">
            afterEnd</dt>
        <dd style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 5px; padding-left: 0px; font-size: 12px; ">
            Callback function that should be invoked after the animation ends. The elements 
            representing the items that are visible after the animation ends are passed in 
            as argument.</dd>
    </dl>
    </span></span>
    <div class="viewCon">
        <h3>
            jcarousellite中文文档</h3>
        <p class="viewInfo">
            来源：昆明多彩网络公司 日期：2010-05-28</p>
        <div class="viewDes">
            jcarousellite是一款jquery插件，可以控制文档元素滚动，丰富的参数设置可以控制滚动的更多细节，是一款不可多得的滚动插件。</div>
        <p>
            目前版本：1.0.1<br />
            ------------------</p>
        <p>
            下载地址：<a href="http://www.gmarwaha.com/jquery/jcarousellite/">http://www.gmarwaha.com/jquery/jcarousellite/</a></p>
        <p>
            使用方法：</p>
        <p>
            页头调用：<br />
            &lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-1.3.2.min.js&quot;&gt;&lt;/script&gt;<br />
            &lt;script type=&quot;text/javascript&quot; src=&quot;js/jcarousellite_1.0.1.min.js&quot;&gt;&lt;/script&gt;</p>
        <p>
            $(document).ready(function(){<br />
&nbsp;&nbsp;&nbsp; $(&quot;.类名&quot;).jCarouselLite({<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; btnNext: &quot;.next&quot;,<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; btnPrev: &quot;.prev&quot;<br />
&nbsp;&nbsp;&nbsp; });<br />
            });</p>
        <p>
            html：<br />
            &lt;div class=&quot;类名&quot;&gt;<br />
&nbsp; &lt;ul&gt;<br />
&nbsp;&nbsp;&nbsp; &lt;li&gt;&lt;/li&gt;<br />
&nbsp; &lt;/ul&gt;<br />
            &lt;/div&gt;</p>
        <p>
            -------------------------</p>
        <p>
            参数说明：</p>
        <p>
            btnPrev&nbsp;&nbsp;&nbsp;&nbsp; string 上一个按钮的class名, 比如&nbsp; btnPrev: &quot;.prev&quot;</p>
        <p>
            btnNext&nbsp;&nbsp;&nbsp;&nbsp; string 下一个按钮的class名, 比如&nbsp; btnPrev: &quot;.prev&quot;</p>
        <p>
            btnGo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; array&nbsp; 
            自定义滚动位置,类似幻灯片效果置,有选项卡,按照数组顺序,依次为按钮1按钮2按钮N,如以下,class名为1的按钮是第一个按钮：[&quot;.1&quot;, &quot;.2&quot;]</p>
        <p>
            mouseWheel&nbsp; bool&nbsp;&nbsp; 鼠标滑是否可以轮控制上下滚动,可选：false,true,默认false</p>
        <p>
            auto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp; 
            指定多少秒内容定期自动滚动。默认为空(null),是不滚动,如果设定的,单位为毫秒,如1秒为1000</p>
        <p>
            speed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp; 滑动的速度,可以尝试800 
            1000 1500,设置成0将删除效果</p>
        <p>
            easing&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string 缓冲效果名称,如：easing: 
            &quot;bounceout&quot;,需要jquery中的easing pluin（缓冲插件实现）,只适用于jq1.2</p>
        <p>
            vertical&nbsp;&nbsp;&nbsp; bool&nbsp;&nbsp; 是否垂直滚动,可选：false,true,默认false</p>
        <p>
            circular&nbsp;&nbsp;&nbsp; bool&nbsp;&nbsp; 是否循环滚动,默认为true,如果为false,滚动到最后一个将停止滚动</p>
        <p>
            visible&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp; 可见数量,可以为小数，如2.5为2.5个li</p>
        <p>
            start&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp; 开始的地方,默认是0</p>
        <p>
            scroll&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp; 每次滚动的li数量</p>
        <p>
            beforeStart func&nbsp;&nbsp; 滚动开始时回调的函数,可以传入对象参数 beforeStart: function(a) { 
            alert(&quot;开始的对象是:&quot; + a)}</p>
        <p>
            afterEnd&nbsp;&nbsp;&nbsp; func&nbsp;&nbsp; 滚动结束时回调的函数,使用方法同上</p>
    </div>

</body>
</html>
