//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBasics.Member.Model
{
	using System;
	using MySoft.Data;


	/// <summary>
	/// 表名：wb_User 主键列：ID
	/// </summary>
	[SerializableAttribute()]
	public partial class User : Entity
	{

		protected Guid _ID;

		protected DateTime _AddTime;

		protected DateTime _UpdateTime;

		protected Boolean _IsDeleted;

		protected String _UserName;

		protected String _Password;

		protected String _PasswordHash;

		protected String _Email;

		protected String _Mobile;

		protected String _NickName;

		protected String _Name;

		protected Byte _Gender;

		protected DateTime _Birthday;

		protected String _CreatedIP;

		protected String _LastLoginIP;

		protected DateTime _LastLoginTime;

		protected Int32 _LoginCount;

		protected Int32? _OldId;

		protected String _HeadPicture;

		protected String _Title;

		protected Int32 _City;

		protected String _Company;

		protected Int32 _Region;

		protected String _Address;

		protected String _BlogUrl;

		protected Int32 _Score;

		protected Int32 _TheLevel;

		public Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				this.OnPropertyValueChange(_.ID, _ID, value);
				this._ID = value;
			}
		}

		public DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				this.OnPropertyValueChange(_.AddTime, _AddTime, value);
				this._AddTime = value;
			}
		}

		public DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				this.OnPropertyValueChange(_.UpdateTime, _UpdateTime, value);
				this._UpdateTime = value;
			}
		}

		public Boolean IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
				this._IsDeleted = value;
			}
		}

		public String UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				this.OnPropertyValueChange(_.UserName, _UserName, value);
				this._UserName = value;
			}
		}

		public String Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				this.OnPropertyValueChange(_.Password, _Password, value);
				this._Password = value;
			}
		}

		public String PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				this.OnPropertyValueChange(_.PasswordHash, _PasswordHash, value);
				this._PasswordHash = value;
			}
		}

		public String Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				this.OnPropertyValueChange(_.Email, _Email, value);
				this._Email = value;
			}
		}

		public String Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				this.OnPropertyValueChange(_.Mobile, _Mobile, value);
				this._Mobile = value;
			}
		}

		public String NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				this.OnPropertyValueChange(_.NickName, _NickName, value);
				this._NickName = value;
			}
		}

		public String Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				this.OnPropertyValueChange(_.Name, _Name, value);
				this._Name = value;
			}
		}

		public Byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				this.OnPropertyValueChange(_.Gender, _Gender, value);
				this._Gender = value;
			}
		}

		public DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				this.OnPropertyValueChange(_.Birthday, _Birthday, value);
				this._Birthday = value;
			}
		}

		public String CreatedIP
		{
			get
			{
				return this._CreatedIP;
			}
			set
			{
				this.OnPropertyValueChange(_.CreatedIP, _CreatedIP, value);
				this._CreatedIP = value;
			}
		}

		public String LastLoginIP
		{
			get
			{
				return this._LastLoginIP;
			}
			set
			{
				this.OnPropertyValueChange(_.LastLoginIP, _LastLoginIP, value);
				this._LastLoginIP = value;
			}
		}

		public DateTime LastLoginTime
		{
			get
			{
				return this._LastLoginTime;
			}
			set
			{
				this.OnPropertyValueChange(_.LastLoginTime, _LastLoginTime, value);
				this._LastLoginTime = value;
			}
		}

		public Int32 LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				this.OnPropertyValueChange(_.LoginCount, _LoginCount, value);
				this._LoginCount = value;
			}
		}

		public Int32? OldId
		{
			get
			{
				return this._OldId;
			}
			set
			{
				this.OnPropertyValueChange(_.OldId, _OldId, value);
				this._OldId = value;
			}
		}

		public String HeadPicture
		{
			get
			{
				return this._HeadPicture;
			}
			set
			{
				this.OnPropertyValueChange(_.HeadPicture, _HeadPicture, value);
				this._HeadPicture = value;
			}
		}

		/// <summary>
		/// 职称
		/// </summary>
		public String Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				this.OnPropertyValueChange(_.Title, _Title, value);
				this._Title = value;
			}
		}

		public Int32 City
		{
			get
			{
				return this._City;
			}
			set
			{
				this.OnPropertyValueChange(_.City, _City, value);
				this._City = value;
			}
		}

		public String Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				this.OnPropertyValueChange(_.Company, _Company, value);
				this._Company = value;
			}
		}

		public Int32 Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				this.OnPropertyValueChange(_.Region, _Region, value);
				this._Region = value;
			}
		}

		public String Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				this.OnPropertyValueChange(_.Address, _Address, value);
				this._Address = value;
			}
		}

		public String BlogUrl
		{
			get
			{
				return this._BlogUrl;
			}
			set
			{
				this.OnPropertyValueChange(_.BlogUrl, _BlogUrl, value);
				this._BlogUrl = value;
			}
		}

		public Int32 Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				this.OnPropertyValueChange(_.Score, _Score, value);
				this._Score = value;
			}
		}

		public Int32 TheLevel
		{
			get
			{
				return this._TheLevel;
			}
			set
			{
				this.OnPropertyValueChange(_.TheLevel, _TheLevel, value);
				this._TheLevel = value;
			}
		}

		/// <summary>
		/// 获取实体对应的表名
		/// </summary>
		protected override Table GetTable()
		{
			return new Table<User>("wb_User");
		}

		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		protected override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
                        _.ID};
		}

		/// <summary>
		/// 获取列信息
		/// </summary>
		protected override Field[] GetFields()
		{
			return new Field[] {
                        _.ID,
                        _.AddTime,
                        _.UpdateTime,
                        _.IsDeleted,
                        _.UserName,
                        _.Password,
                        _.PasswordHash,
                        _.Email,
                        _.Mobile,
                        _.NickName,
                        _.Name,
                        _.Gender,
                        _.Birthday,
                        _.CreatedIP,
                        _.LastLoginIP,
                        _.LastLoginTime,
                        _.LoginCount,
                        _.OldId,
                        _.HeadPicture,
                        _.Title,
                        _.City,
                        _.Company,
                        _.Region,
                        _.Address,
                        _.BlogUrl,
                        _.Score,
                        _.TheLevel};
		}

		/// <summary>
		/// 获取列数据
		/// </summary>
		protected override object[] GetValues()
		{
			return new object[] {
                        this._ID,
                        this._AddTime,
                        this._UpdateTime,
                        this._IsDeleted,
                        this._UserName,
                        this._Password,
                        this._PasswordHash,
                        this._Email,
                        this._Mobile,
                        this._NickName,
                        this._Name,
                        this._Gender,
                        this._Birthday,
                        this._CreatedIP,
                        this._LastLoginIP,
                        this._LastLoginTime,
                        this._LoginCount,
                        this._OldId,
                        this._HeadPicture,
                        this._Title,
                        this._City,
                        this._Company,
                        this._Region,
                        this._Address,
                        this._BlogUrl,
                        this._Score,
                        this._TheLevel};
		}

		/// <summary>
		/// 给当前实体赋值
		/// </summary>
		protected override void SetValues(IRowReader reader)
		{
			if ((false == reader.IsDBNull(_.ID)))
			{
				this._ID = reader.GetGuid(_.ID);
			}
			if ((false == reader.IsDBNull(_.AddTime)))
			{
				this._AddTime = reader.GetDateTime(_.AddTime);
			}
			if ((false == reader.IsDBNull(_.UpdateTime)))
			{
				this._UpdateTime = reader.GetDateTime(_.UpdateTime);
			}
			if ((false == reader.IsDBNull(_.IsDeleted)))
			{
				this._IsDeleted = reader.GetBoolean(_.IsDeleted);
			}
			if ((false == reader.IsDBNull(_.UserName)))
			{
				this._UserName = reader.GetString(_.UserName);
			}
			if ((false == reader.IsDBNull(_.Password)))
			{
				this._Password = reader.GetString(_.Password);
			}
			if ((false == reader.IsDBNull(_.PasswordHash)))
			{
				this._PasswordHash = reader.GetString(_.PasswordHash);
			}
			if ((false == reader.IsDBNull(_.Email)))
			{
				this._Email = reader.GetString(_.Email);
			}
			if ((false == reader.IsDBNull(_.Mobile)))
			{
				this._Mobile = reader.GetString(_.Mobile);
			}
			if ((false == reader.IsDBNull(_.NickName)))
			{
				this._NickName = reader.GetString(_.NickName);
			}
			if ((false == reader.IsDBNull(_.Name)))
			{
				this._Name = reader.GetString(_.Name);
			}
			if ((false == reader.IsDBNull(_.Gender)))
			{
				this._Gender = reader.GetByte(_.Gender);
			}
			if ((false == reader.IsDBNull(_.Birthday)))
			{
				this._Birthday = reader.GetDateTime(_.Birthday);
			}
			if ((false == reader.IsDBNull(_.CreatedIP)))
			{
				this._CreatedIP = reader.GetString(_.CreatedIP);
			}
			if ((false == reader.IsDBNull(_.LastLoginIP)))
			{
				this._LastLoginIP = reader.GetString(_.LastLoginIP);
			}
			if ((false == reader.IsDBNull(_.LastLoginTime)))
			{
				this._LastLoginTime = reader.GetDateTime(_.LastLoginTime);
			}
			if ((false == reader.IsDBNull(_.LoginCount)))
			{
				this._LoginCount = reader.GetInt32(_.LoginCount);
			}
			if ((false == reader.IsDBNull(_.OldId)))
			{
				this._OldId = reader.GetInt32(_.OldId);
			}
			if ((false == reader.IsDBNull(_.HeadPicture)))
			{
				this._HeadPicture = reader.GetString(_.HeadPicture);
			}
			if ((false == reader.IsDBNull(_.Title)))
			{
				this._Title = reader.GetString(_.Title);
			}
			if ((false == reader.IsDBNull(_.City)))
			{
				this._City = reader.GetInt32(_.City);
			}
			if ((false == reader.IsDBNull(_.Company)))
			{
				this._Company = reader.GetString(_.Company);
			}
			if ((false == reader.IsDBNull(_.Region)))
			{
				this._Region = reader.GetInt32(_.Region);
			}
			if ((false == reader.IsDBNull(_.Address)))
			{
				this._Address = reader.GetString(_.Address);
			}
			if ((false == reader.IsDBNull(_.BlogUrl)))
			{
				this._BlogUrl = reader.GetString(_.BlogUrl);
			}
			if ((false == reader.IsDBNull(_.Score)))
			{
				this._Score = reader.GetInt32(_.Score);
			}
			if ((false == reader.IsDBNull(_.TheLevel)))
			{
				this._TheLevel = reader.GetInt32(_.TheLevel);
			}
		}

		public override int GetHashCode()
		{
			return base.GetHashCode();
		}

		public override bool Equals(object obj)
		{
			if ((obj == null))
			{
				return false;
			}
			if ((false == typeof(User).IsAssignableFrom(obj.GetType())))
			{
				return false;
			}
			if ((((object)(this)) == ((object)(obj))))
			{
				return true;
			}
			return false;
		}

		public class _
		{

			/// <summary>
			/// 表示选择所有列，与*等同
			/// </summary>
			public static AllField All = new AllField<User>();

			/// <summary>
			/// 字段名：ID - 数据类型：Guid
			/// </summary>
			public static Field ID = new Field<User>("ID");

			/// <summary>
			/// 字段名：AddTime - 数据类型：DateTime
			/// </summary>
			public static Field AddTime = new Field<User>("AddTime");

			/// <summary>
			/// 字段名：UpdateTime - 数据类型：DateTime
			/// </summary>
			public static Field UpdateTime = new Field<User>("UpdateTime");

			/// <summary>
			/// 字段名：IsDeleted - 数据类型：Boolean
			/// </summary>
			public static Field IsDeleted = new Field<User>("IsDeleted");

			/// <summary>
			/// 字段名：UserName - 数据类型：String
			/// </summary>
			public static Field UserName = new Field<User>("UserName");

			/// <summary>
			/// 字段名：Password - 数据类型：String
			/// </summary>
			public static Field Password = new Field<User>("Password");

			/// <summary>
			/// 字段名：PasswordHash - 数据类型：String
			/// </summary>
			public static Field PasswordHash = new Field<User>("PasswordHash");

			/// <summary>
			/// 字段名：Email - 数据类型：String
			/// </summary>
			public static Field Email = new Field<User>("Email");

			/// <summary>
			/// 字段名：Mobile - 数据类型：String
			/// </summary>
			public static Field Mobile = new Field<User>("Mobile");

			/// <summary>
			/// 字段名：NickName - 数据类型：String
			/// </summary>
			public static Field NickName = new Field<User>("NickName");

			/// <summary>
			/// 字段名：Name - 数据类型：String
			/// </summary>
			public static Field Name = new Field<User>("Name");

			/// <summary>
			/// 字段名：Gender - 数据类型：Byte
			/// </summary>
			public static Field Gender = new Field<User>("Gender");

			/// <summary>
			/// 字段名：Birthday - 数据类型：DateTime
			/// </summary>
			public static Field Birthday = new Field<User>("Birthday");

			/// <summary>
			/// 字段名：CreatedIP - 数据类型：String
			/// </summary>
			public static Field CreatedIP = new Field<User>("CreatedIP");

			/// <summary>
			/// 字段名：LastLoginIP - 数据类型：String
			/// </summary>
			public static Field LastLoginIP = new Field<User>("LastLoginIP");

			/// <summary>
			/// 字段名：LastLoginTime - 数据类型：DateTime
			/// </summary>
			public static Field LastLoginTime = new Field<User>("LastLoginTime");

			/// <summary>
			/// 字段名：LoginCount - 数据类型：Int32
			/// </summary>
			public static Field LoginCount = new Field<User>("LoginCount");

			/// <summary>
			/// 字段名：OldId - 数据类型：Nullable`1
			/// </summary>
			public static Field OldId = new Field<User>("OldId");

			/// <summary>
			/// 字段名：HeadPicture - 数据类型：String
			/// </summary>
			public static Field HeadPicture = new Field<User>("HeadPicture");

			/// <summary>
			/// 职称 - 字段名：Title - 数据类型：String
			/// </summary>
			public static Field Title = new Field<User>("Title");

			/// <summary>
			/// 字段名：City - 数据类型：Int32
			/// </summary>
			public static Field City = new Field<User>("City");

			/// <summary>
			/// 字段名：Company - 数据类型：String
			/// </summary>
			public static Field Company = new Field<User>("Company");

			/// <summary>
			/// 字段名：Region - 数据类型：Int32
			/// </summary>
			public static Field Region = new Field<User>("Region");

			/// <summary>
			/// 字段名：Address - 数据类型：String
			/// </summary>
			public static Field Address = new Field<User>("Address");

			/// <summary>
			/// 字段名：BlogUrl - 数据类型：String
			/// </summary>
			public static Field BlogUrl = new Field<User>("BlogUrl");

			/// <summary>
			/// 字段名：Score - 数据类型：Int32
			/// </summary>
			public static Field Score = new Field<User>("Score");

			/// <summary>
			/// 字段名：TheLevel - 数据类型：Int32
			/// </summary>
			public static Field TheLevel = new Field<User>("TheLevel");
		}
	}
}
